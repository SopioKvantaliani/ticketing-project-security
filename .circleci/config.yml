version: 2
jobs:
#  I have 3 jobs
  build:
    docker:
      # specify the version you desire here; 1st image;
      - image: circleci/openjdk:11-jdk
#        creates directory if you don't have
    working_directory: /tmp/workspace
    steps:
#    checkout means find my code on GitHub
      - checkout
#      I'll use tmp/workspace as a parent folder. -p is for parent folder, root folder.
      - run: mkdir -p /tmp/workspace
      # Download and cache dependencies. Cashing is saving your time. restore_cache works if you
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
            -
#this will compile the code
      - run: mvn clean install -DskipTests
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /tmp/workspace
          paths: .
  docker-image-and-publish:
#    this mean I'll publish this image in another computer
    machine: true
#    Normally all jobs are independent. if you want to
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: ls -a /tmp/workspace
      - run:
          name: Create Docker image and push to ECR
          command: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 267210495270.dkr.ecr.us-east-1.amazonaws.com && docker build -t ticketingapp /tmp/workspace && docker tag ticketingapp:latest 267210495270.dkr.ecr.us-east-1.amazonaws.com/ticketingapp:latest && docker push 267210495270.dkr.ecr.us-east-1.amazonaws.com/ticketingapp:latest
  deploy-job:
    docker:
      #specify the version you desire here
      - image: circleci/node:10.0.0
    steps:
      - run:
          name: Execute Deployment Script
          command: |
            ssh -o "StrictHostKeyChecking=no" ec2-user@ec2-34-227-162-26.compute-1.amazonaws.com <<'ENDSSH'
            /bin/bash bin/deploy_image.sh
            docker ps

# sets the order of jobs
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - docker-image-and-publish:
#          don't run this job before deploy job is done
          requires:
            - build
#         don't run deploy-job before docker-image and  publish is done.
      - deploy-job:
          requires:
            - docker-image-and-publish